<?php
// src/control/consumoApiController.php
require_once __DIR__ . '/../library/helpers.php';
require_once __DIR__ . '/../model/ClientApi.php';

class ConsumoApiController
{
    // 游녤 M칠todo principal que carga la vista
    public function index()
    {
        // no requiere login, solo muestra el formulario de b칰squeda
        view('consumoapi/index');
    }

   public function verClienteApiByNombre()
{
    require_once __DIR__ . '/../model/ConsumoApi.php';

    $tipo   = $_POST['tipo']  ?? '';
    $token  = trim((string)($_POST['token'] ?? ''));
    $term   = trim((string)($_POST['data']  ?? ''));

    if ($tipo !== 'verclienteapiByNombre') {
        echo json_encode(['status' => false, 'msg' => 'Par치metro tipo inv치lido']);
        return;
    }

    // 1) Si HAY texto y NO hay token -> b칰squeda global por nombre (LIKE %texto%)
    if ($term !== '' && $token === '') {
        $arr_clientes = ConsumoApi::buscarClientesPorDenominacion($term, 50, 0); // solo Activos si as칤 lo pusiste en el modelo
        echo json_encode(['status' => true, 'msg' => '', 'contenido' => $arr_clientes]);
        return;
    }

    // 2) En los dem치s casos, el token es obligatorio (para devolver solo el due침o o validar acceso)
    if ($token === '') {
        echo json_encode(['status' => false, 'msg' => 'Token requerido (o ingrese texto para buscar por nombre).']);
        return;
    }

    // ID = 칰ltimo segmento del token
    $parts = explode('-', $token);
    $last  = end($parts);
    $id_cliente = (ctype_digit($last) ? (int)$last : null);

    if (!$id_cliente) {
        echo json_encode(['status' => false, 'msg' => 'Token inv치lido o incompleto']);
        return;
    }

    // Verificar due침o/token activo
    $owner = ConsumoApi::buscarClienteById($id_cliente);
    if (!$owner || ($owner['estado'] ?? null) !== 'Activo') {
        echo json_encode(['status' => false, 'msg' => 'Error, cliente no activo o no encontrado']);
        return;
    }

    // 2a) Si NO hay texto -> solo el cliente del token
    if ($term === '') {
        $arr_clientes = ConsumoApi::buscarClienteByIdYDenominacion($id_cliente, '');
        echo json_encode(['status' => true, 'msg' => '', 'contenido' => $arr_clientes]);
        return;
    }

    // 2b) Si HAY texto y S칈 hay token -> (elige pol칤tica)
    // Pol칤tica A: b칰squeda global por nombre
    $arr_clientes = ConsumoApi::buscarClientesPorDenominacion($term, 50, 0);

    // // Pol칤tica B (si prefieres scoped): exigir que el nombre coincida con el MISMO id del token
    // $arr_clientes = ConsumoApi::buscarClienteByIdYDenominacion($id_cliente, $term);

    echo json_encode(['status' => true, 'msg' => '', 'contenido' => $arr_clientes]);
}


}
